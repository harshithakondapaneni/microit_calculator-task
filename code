<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Advanced Calculator</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f4f7f8;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .calculator {
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
      width: 340px;
    }

    .display {
      background: #222;
      color: #fff;
      font-size: 2rem;
      border-radius: 8px;
      padding: 15px;
      text-align: right;
      margin-bottom: 15px;
      min-height: 50px;
      user-select: none;
      overflow-x: auto;
    }

    .buttons {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 10px;
    }

    button {
      padding: 18px;
      font-size: 1.2rem;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      background: #e0e0e0;
      transition: background 0.3s ease;
      user-select: none;
    }

    button.operator {
      background: #f57c00;
      color: white;
    }

    button.equal {
      background: #0d47a1;
      color: white;
      grid-column: span 2;
    }

    button.clear {
      background: #d32f2f;
      color: white;
    }

    button.adv {
      background: #9c27b0;
      color: white;
    }

    button:hover {
      filter: brightness(90%);
    }
  </style>
</head>
<body>
  <div class="calculator">
    <div id="display" class="display">0</div>
    <div class="buttons">
      <button class="clear" id="clear">C</button>
      <button id="backspace">←</button>
      <button class="adv" id="percent">%</button>
      <button class="operator" data-op="/">÷</button>

      <button data-num="7">7</button>
      <button data-num="8">8</button>
      <button data-num="9">9</button>
      <button class="operator" data-op="*">×</button>

      <button data-num="4">4</button>
      <button data-num="5">5</button>
      <button data-num="6">6</button>
      <button class="operator" data-op="-">−</button>

      <button data-num="1">1</button>
      <button data-num="2">2</button>
      <button data-num="3">3</button>
      <button class="operator" data-op="+">+</button>

      <button id="plus-minus">±</button>
      <button data-num="0">0</button>
      <button data-num=".">.</button>
      <button class="equal" id="equals">=</button>

      <button class="adv" id="sqrt">√</button>
      <button class="adv" data-op="**">xʸ</button>
    </div>
  </div>

  <script>
    const display = document.getElementById('display');
    const buttons = document.querySelectorAll('button');
    let currentInput = '';
    let lastResult = null;

    function updateDisplay(value) {
      display.textContent = value || '0';
    }

    function isOperator(char) {
      return ['+', '-', '*', '/', '**'].includes(char);
    }

    function safeEval(expr) {
      return Function('"use strict";return (' + expr + ')')();
    }

    function handleInput(input) {
      const lastChar = currentInput.slice(-1);

      if (input === '.' && currentInput.split(/[\+\-\*\/]/).pop().includes('.')) return;

      if (['+', '-', '*', '/', '**'].includes(input)) {
        if (currentInput === '' && lastResult !== null) currentInput = lastResult.toString();
        if (currentInput === '') return;
        if (isOperator(lastChar)) currentInput = currentInput.slice(0, -1);
        currentInput += input;
      } else {
        currentInput += input;
      }

      updateDisplay(currentInput);
    }

    function calculateResult() {
      try {
        const result = safeEval(currentInput);
        if (!isFinite(result)) {
          updateDisplay('Error');
          currentInput = '';
          return;
        }
        lastResult = result;
        updateDisplay(result);
        currentInput = result.toString();
      } catch {
        updateDisplay('Error');
        currentInput = '';
      }
    }

    buttons.forEach(button => {
      button.addEventListener('click', () => {
        const num = button.getAttribute('data-num');
        const op = button.getAttribute('data-op');
        const id = button.id;

        if (id === 'clear') {
          currentInput = '';
          lastResult = null;
          updateDisplay('0');
        } else if (id === 'backspace') {
          currentInput = currentInput.slice(0, -1);
          updateDisplay(currentInput);
        } else if (id === 'equals') {
          calculateResult();
        } else if (id === 'percent') {
          if (currentInput) {
            currentInput = (parseFloat(currentInput) / 100).toString();
            updateDisplay(currentInput);
          }
        } else if (id === 'sqrt') {
          if (currentInput) {
            currentInput = Math.sqrt(parseFloat(currentInput)).toString();
            updateDisplay(currentInput);
          }
        } else if (id === 'plus-minus') {
          if (currentInput.startsWith('-')) {
            currentInput = currentInput.slice(1);
          } else if (currentInput) {
            currentInput = '-' + currentInput;
          }
          updateDisplay(currentInput);
        } else if (num !== null) {
          handleInput(num);
        } else if (op !== null) {
          handleInput(op);
        }
      });
    });

    // Keyboard support
    document.addEventListener('keydown', (e) => {
      const key = e.key;
      if (!isNaN(key) || key === '.') handleInput(key);
      else if (['+', '-', '*', '/', '^'].includes(key)) {
        handleInput(key === '^' ? '**' : key);
      } else if (key === 'Enter') calculateResult();
      else if (key === 'Backspace') {
        currentInput = currentInput.slice(0, -1);
        updateDisplay(currentInput);
      } else if (key.toLowerCase() === 'c') {
        currentInput = '';
        updateDisplay('0');
      }
    });
  </script>
</body>
</html>
